---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: kube-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: "8.4.6"
    app.kubernetes.io/tier: middleware
    app.kubernetes.io/enviroment: kube-monitoring
    app.kubernetes.io/component: dashboard
spec:
  serviceName: grafana
  replicas: 1
  revisionHistoryLimit: 1
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: "8.4.6"
      app.kubernetes.io/tier: middleware
      app.kubernetes.io/enviroment: kube-monitoring
      app.kubernetes.io/component: dashboard
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: grafana
      namespace: kube-monitoring
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/version: "8.4.6"
        app.kubernetes.io/tier: middleware
        app.kubernetes.io/enviroment: kube-monitoring
        app.kubernetes.io/component: dashboard
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      hostname: grafana
      restartPolicy: Always
      imagePullSecrets:
        - name: aliyun-regcred
      nodeSelector:
        node.kubernetes.io/env: kube-monitoring
      tolerations:
        - key: node.kubernetes.io/env
          operator: Equal
          value: kube-monitoring
          effect: NoSchedule
      containers:
        - name: grafana
          image: "registry-vpc.cn-zhangjiakou.aliyuncs.com/data100/grafana:8.4.6"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
          volumeMounts:
            - name: config
              mountPath: /usr/share/grafana/conf/defaults.ini
              subPath: defaults.ini
            - name: data
              mountPath: /usr/share/grafana/data
          ports:
            - name: server
              protocol: TCP
              containerPort: 3000
          livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 3
            failureThreshold: 10
            timeoutSeconds: 3
          startupProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 9
            periodSeconds: 1
            failureThreshold: 180
            timeoutSeconds: 3
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: data
          hostPath:
            path: /data/grafana
            type: DirectoryOrCreate
...